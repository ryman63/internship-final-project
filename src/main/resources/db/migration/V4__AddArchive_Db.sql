create table archived_internship (id int8 generated by default as identity, date_begin date, date_end date, date_end_recording date, description varchar(255), name varchar(255), primary key (id));
create table archived_participant (id int8 generated by default as identity, about_me varchar(255), city varchar(255), course int4 not null, date_of_birth date, education_status varchar(255), email varchar(255), faculty varchar(255), full_name varchar(255), mobile_number varchar(255), specialty varchar(255), telegram_id varchar(255), university varchar(255), username varchar(255), archived_internship_id int8 not null, primary key (id));
create table archived_performance (id int8 generated by default as identity, grade varchar(255), task_name varchar(255), archived_participant_id int8 not null, primary key (id));
create table fork (id int8 generated by default as identity, git_lab_repository_id varchar(255), lesson_id int8 not null, task_id int8 not null, user_id int8 not null, primary key (id));
alter table if exists archived_participant add constraint FK_archivedParticipant foreign key (archived_internship_id) references archived_internship;
alter table if exists archived_performance add constraint FK_archivedPerformance foreign key (archived_participant_id) references archived_participant;
alter table if exists fork add constraint FK_fork_task foreign key (task_id) references task;
alter table if exists fork add constraint FK_fork_lesson foreign key (user_id) references users;
